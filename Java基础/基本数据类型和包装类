为什么会有包装类？
   Java是一种面向对象的语言，但在Java中不能直接定义基本数据类型的对象，虽然Java是可以直接处理基本数据类型的，但在有些情况下需要将其作为对象来处理。

基本数据类型和包装类的相互转换：
   装箱：将基本数据类型转换为包装类；
   拆箱：将包装类转换为基本数据类型。

运用到包装类的环境有哪些？
   1、集合类只能存储对象，所以需要使用包装类；
   2、反射调用函数中使用包装类；
   3、数据库查询的结果为null时，不能赋值给基本数据类型，应该使用包装类。

基本数据类型和包装类的区别：
   1、基本数据类型的默认值为0、false，包装类的默认值为null；
   2、声明方式不同，基本数据类型无需通过new关键字来创建，而包装类需要；
   3、包装类是引用传递，基本数据类型是值传递（不过，一般认为Java都是值传递，因为引用传递的引用是内存地址，也是一个值）；
   4、存储位置不同，基本数据类型直接将值保存在栈中，而包装类是把对象保存在堆中，然后通过对象的引用来调用；
   5、包装类是对象，拥有方法和字段，对象的调用都是引用对象的地址，基本类型不是。
