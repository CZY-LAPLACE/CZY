Java中有几种类型的流？
字节流和字符流。字节流继承InputStream和OutputStream，字符流继承Reader和Writer。

字节流和字符流有什么区别？
    字节流处理单元为一个字符，操作字节和字节数组；而字符流处理单元为两个字节，操作字符、字符组和字符串。所以字符流是由Java虚拟机将字节转化为两个字节的Unicode字符为单位的字符而成的。例如：音频文件、图片、歌曲，用字节流就可以了，这样可以避免数据的丢失，如果关系到文本的，用字符流比较好。

讲讲NIO
    传统的IO流是 阻塞式的，会一直监听一个serverSocket，在调用read等方法时，它会一直等到数据到来或者缓冲区已满时才返回。调用accept也是一直阻塞到有客户端连接时才返回。每个客户端连接过来后，服务器端都会启动一个线程去处理该客户端的请求。并且多线程处理多个连接。每个线程拥有自己的栈空间并且占用一些cpu时间。每个线程遇到外部未准备好的时间，都会阻塞掉，阻塞的结果就是带来大量的进程上下文切换。
对于NIO，它也非阻塞式的，核心类:
1、Buffer为所有的原始类型提供缓存支持；
2、charset字符集编码解决方案；
3、channel一个原始的I/O抽象，用于读写Buffer类型，通道可以认为一种连接，可以是到特定设备，程序或者网络的连接。
